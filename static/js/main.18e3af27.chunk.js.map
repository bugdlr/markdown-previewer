{"version":3,"sources":["Editor.js","Preview.js","App.js","index.js"],"names":["Editor","props","react_default","a","createElement","className","onChange","e","handleChange","target","value","id","input","Preview","dangerouslySetInnerHTML","createMarkup","placeholder","marked","setOptions","breaks","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","setState","__html","src_Editor","src_Preview","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"gPAYeA,EAVC,SAACC,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,YAAUE,SAAU,SAACC,GAAON,EAAMO,aAAaD,EAAEE,OAAOC,QAAUC,GAAG,SAASD,MAAOT,EAAMW,UCMpFC,EAVC,SAACZ,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKO,GAAG,UAAUG,wBAAyBb,EAAMc,aAAad,EAAMW,2BCDpEI,EAAW,ypCAiDjBC,IAAOC,WAAW,CAChBC,QAAQ,QAsCKC,cAlCX,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMvB,KAED2B,MAAQ,CACXhB,MAAOI,GAGTK,EAAKb,aAAea,EAAKb,aAAaqB,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAPHA,4EAULT,GACZY,KAAKO,SAAS,CACZnB,+CAISA,GACX,MAAO,CACLoB,OAAQf,IAAOL,qCAKnB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6B,EAAD,CAAQrB,MAAOY,KAAKI,MAAMhB,MAAOJ,aAAcgB,KAAKhB,eACpDN,EAAAC,EAAAC,cAAC8B,EAAD,CAAStB,MAAOY,KAAKI,MAAMhB,MAAOG,aAAcS,KAAKT,uBA3B3CoB,aCpDlBC,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.18e3af27.chunk.js","sourcesContent":["import React from 'react';\n\n const Editor = (props) => {\n    return (\n      <div className=\"editor-container\">\n        <h2>Write your markdown here:</h2>\n        <textarea onChange={(e) => {props.handleChange(e.target.value)} } id=\"editor\" value={props.input}></textarea>\n\n      </div>\n    )\n};\n\nexport default Editor;\n","import React from 'react';\n\nconst Preview = (props) => {\n  return (\n    <div className=\"preview-container\">\n      <h2>Preview:</h2>\n      <div id=\"preview\" dangerouslySetInnerHTML={props.createMarkup(props.input)}></div>\n    </div>\n  )\n\n}\n\nexport default Preview;\n","import React, { Component } from 'react';\nimport Editor from './Editor';\nimport Preview from './Preview';\nimport marked from 'marked';\n\nconst placeholder =\n`# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n- Some are bulleted.\n- With different indentation levels.\n- That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n;\n\nmarked.setOptions({\n  breaks: true,\n});\n\nclass App extends Component {\n    constructor(props) {\n      super(props)\n\n      this.state = {\n        input: placeholder\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange (input) {\n      this.setState({\n        input\n      })\n    }\n\n    createMarkup(input) {\n      return {\n        __html: marked(input)\n      }\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Editor input={this.state.input} handleChange={this.handleChange}/>\n        <Preview input={this.state.input} createMarkup={this.createMarkup}/>\n      </div>\n\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}